heat_template_version: 2014-10-16

description: >
  An example of multi-region heat deployment where the DB and
  the server are located on different regions.

parameters:

  key_name:
    type: string
    description : Name of a KeyPair to enable SSH access to the instance

  instance_type:
    type: string
    description: Instance type for web and DB servers
    default: m1.small
    constraints:
      - allowed_values: [m1.tiny, m1.small, m1.medium, m1.large, m1.xlarge]
        description: instance_type must be a valid instance type

  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters

  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters

  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters

  db_root_password:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters

resources:
  DBSecurityGroup:
    type: OS::Neutron::SecurityGroup
    properties:
      name: db_server_sec
      description: Security group that allows Ping, SSH, and access to MySQL.
      rules:
      - protocol: icmp
      - protocol: tcp
        port_range_min: 22
        port_range_max: 22
      - protocol: tcp
        port_range_min: 3306 #default port for mysql
        port_range_max: 3306
        remote_ip_prefix: 10.0.0.0/8
  DBServer:
    type: OS::Nova::Server
    properties:
      image: Ubuntu64-mysql
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      security_groups:
        - {get_resource: DBSecurityGroup}
        - default
      user_data:
        str_replace:
          template: |
            #!/bin/bash

            # The below script is partially from DevStack's stack.sh script
            # Script should be run as root
            MYSQL_HOST=localhost
            MYSQL_USER=db_user
            MYSQL_PASSWORD=db_rootpassword

            # Make sure MySQL is fully running before trying to change the password
            service mysql start
            sleep 5


            # Change default database password
            mysqladmin -uroot password $MYSQL_PASSWORD

            # while ``.my.cnf`` is not needed for OpenStack to function, it is useful
            # as it allows you to access the mysql databases via ``mysql nova`` instead
            # of having to specify the username/password each time.
            if [[ ! -e $HOME/.my.cnf ]]; then
                cat <<EOF >$HOME/.my.cnf
            [client]
            user=$MYSQL_USER
            password=$MYSQL_PASSWORD
            host=$MYSQL_HOST
            EOF
                chmod 0600 $HOME/.my.cnf
            fi

            MY_CONF=/etc/mysql/my.cnf
            MYSQL=mysql

            # Update the DB to give user MYSQL_USER full control of the all databases:
            mysql -uroot -p$MYSQL_PASSWORD -h127.0.0.1 -e "GRANT ALL PRIVILEGES ON *.* TO '$MYSQL_USER'@'%' identified by '$MYSQL_PASSWORD';"

            # Now update ``my.cnf`` for some local needs and restart the mysql service

            # Change bind-address from localhost (127.0.0.1) to any (0.0.0.0)
            sudo sed -i '/^bind-address/s/127.0.0.1/0.0.0.0/g' $MY_CONF

            # Set default db type to InnoDB
            if sudo grep -q "default-storage-engine" $MY_CONF; then
                # Change it
                sudo bash -c "source $TOP_DIR/functions; iniset $MY_CONF mysqld default-storage-engine InnoDB"
            else
                # Add it
                sudo sed -i -e "/^\[mysqld\]/ a \
            default-storage-engine = InnoDB" $MY_CONF
            fi

            service $MYSQL restart

            cat << EOF | mysql -u root --password=db_rootpassword
            CREATE DATABASE db_name;
            GRANT ALL PRIVILEGES ON db_name.* TO "db_user"@"%"
            IDENTIFIED BY "db_password";
            FLUSH PRIVILEGES;
            EXIT
            EOF

          params:
            db_rootpassword: { get_param: db_root_password }
            db_name: { get_param: db_name }
            db_user: { get_param: db_username }
            db_password: { get_param: db_password }

outputs:
  DB_IP:
    description: Public IP address of DB server
    value: { get_attr: [ DBServer, first_address ] }

